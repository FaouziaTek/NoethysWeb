# Generated by Django 3.2.25 on 2024-10-28 15:00

from django.db import migrations, models
import django_cryptography.fields


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0168_auto_20241002_0951'),
    ]

    operations = [
        migrations.AddField(
            model_name='individu',
            name='cattiers_helios',
            field=models.IntegerField(blank=True, choices=[(1, 'Personne physique'), (20, 'Etat ou établissement public national'), (21, 'Région'), (22, 'Département'), (23, 'Commune'), (24, 'Groupement de collectivités'), (25, 'Caisse des écoles'), (26, 'CCAS'), (27, 'Etablissement public de santé'), (28, 'Ecole nationale de la santé publique'), (29, 'Autre établissement publique ou organisme international'), (50, "Personne morale de droit privé autre qu'organisme social"), (60, 'Caisse de sécurité sociale régime général'), (61, 'Caisse de sécurité sociale régime agricole'), (62, 'Sécurité sociale des travailleurs non salariés et professions non agricoles'), (63, 'Autre régime obligatoire de sécurité sociale'), (64, "Mutuelle ou organisme d'assurance"), (65, 'Autre tiers payant'), (70, 'CNRACL'), (71, 'IRCANTEC'), (72, 'ASSEDIC'), (73, 'Caisse mutualiste de retraite complémentaire'), (74, 'Autre organisme social')], default=1, help_text='Sélectionnez la catégorie de tiers pour Hélios (Trésor Public)', null=True, verbose_name='Catégorie de tiers'),
        ),
        migrations.AddField(
            model_name='individu',
            name='email_blocage',
            field=models.BooleanField(default=False, help_text="L'éditeur d'emails groupés du menu Outils ne proposera pas cette famille dans les destinataires.", verbose_name='La famille ne souhaite pas recevoir de mails groupés'),
        ),
        migrations.AddField(
            model_name='individu',
            name='email_factures',
            field=models.BooleanField(default=False, verbose_name="Activation de l'envoi des factures par Email"),
        ),
        migrations.AddField(
            model_name='individu',
            name='email_factures_adresses',
            field=models.CharField(blank=True, max_length=400, null=True, verbose_name="Adresses pour l'envoi des factures par Email"),
        ),
        migrations.AddField(
            model_name='individu',
            name='email_recus',
            field=models.BooleanField(default=False, verbose_name="Activation de l'envoi des reçus par Email"),
        ),
        migrations.AddField(
            model_name='individu',
            name='email_recus_adresses',
            field=models.CharField(blank=True, max_length=400, null=True, verbose_name="Adresses pour l'envoi des reçus par Email"),
        ),
        migrations.AddField(
            model_name='individu',
            name='facturation_cp_resid',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=50, null=True, verbose_name='Code postal')),
        ),
        migrations.AddField(
            model_name='individu',
            name='facturation_nom',
            field=models.CharField(blank=True, max_length=300, null=True, verbose_name='Nom'),
        ),
        migrations.AddField(
            model_name='individu',
            name='facturation_rue_resid',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=200, null=True, verbose_name='Rue')),
        ),
        migrations.AddField(
            model_name='individu',
            name='facturation_ville_resid',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=200, null=True, verbose_name='Ville')),
        ),
        migrations.AddField(
            model_name='individu',
            name='idtiers_helios',
            field=models.CharField(blank=True, help_text="Saisissez l'identifiant national (SIRET ou SIREN ou FINESS ou NIR)", max_length=300, null=True, verbose_name='Identifiant national'),
        ),
        migrations.AddField(
            model_name='individu',
            name='mobile',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=100, null=True, verbose_name='Portable favori')),
        ),
        migrations.AddField(
            model_name='individu',
            name='mobile_blocage',
            field=models.BooleanField(default=False, help_text="L'éditeur de SMS groupés du menu Outils ne proposera pas cette famille dans les destinataires.", verbose_name='La famille ne souhaite pas recevoir de SMS groupés'),
        ),
        migrations.AddField(
            model_name='individu',
            name='natidtiers_helios',
            field=models.IntegerField(blank=True, choices=[(9999, 'Aucun'), (1, '01 - SIRET'), (2, '02 - SIREN'), (3, '03 - FINESS'), (4, '04 - NIR')], default=9999, help_text="Sélectionnez le type d'identifiant national du tiers pour Hélios (Trésor Public)", null=True, verbose_name="Type d'identifiant national"),
        ),
        migrations.AddField(
            model_name='individu',
            name='natjur_helios',
            field=models.IntegerField(blank=True, choices=[(0, 'Inconnu'), (1, 'Particulier'), (2, 'Artisan / commerçant / agriculteur'), (3, 'Société'), (4, 'CAM ou Caisse appliquant les mêmes règles'), (5, 'Caisse complémentaire'), (6, 'Association'), (7, "Etat ou organisme d'état"), (8, 'Etablissement public national'), (9, 'Collectivité territoriale / EPL / EPS'), (10, 'Etat étranger'), (11, 'CAF')], default=1, help_text='Sélectionnez la nature juridique du tiers pour Hélios (Trésor Public)', null=True, verbose_name='Nature juridique'),
        ),
        migrations.AddField(
            model_name='individu',
            name='reftiers_helios',
            field=models.CharField(blank=True, help_text='Saisissez la référence locale du tiers', max_length=200, null=True, verbose_name='Référence locale'),
        ),
        migrations.AlterField(
            model_name='individu',
            name='mail',
            field=django_cryptography.fields.encrypt(models.EmailField(blank=True, max_length=300, null=True, verbose_name='Email favori')),
        ),
    ]
